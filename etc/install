#!/bin/bash

is_exists() {
  which "$1" > /dev/null 2>&1
  return $?
}

ink() {
    if [ "$#" -eq 0 -o "$#" -gt 2 ]; then
        echo "Usage: ink <color> <text>"
        echo "Colors:"
        echo "  black, white, red, green, yellow, blue, purple, cyan, gray"
        return 1
    fi

    local open="\033["
    local close="${open}0m"
    local black="0;30m"
    local red="1;31m"
    local green="1;32m"
    local yellow="1;33m"
    local blue="1;34m"
    local purple="1;35m"
    local cyan="1;36m"
    local gray="0;37m"
    local white="$close"

    local text="$1"
    local color="$close"

    if [ "$#" -eq 2 ]; then
        text="$2"
        case "$1" in
            black | red | green | yellow | blue | purple | cyan | gray | white)
            eval color="\$$1"
            ;;
        esac
    fi

    printf "${open}${color}${text}${close}"
}

logging() {
    if [ "$#" -eq 0 -o "$#" -gt 2 ]; then
        echo "Usage: ink <fmt> <msg>"
        echo "Formatting Options:"
        echo "  TITLE, ERROR, WARN, INFO, SUCCESS"
        return 1
    fi

    local color=
    local text="$2"

    case "$1" in
        TITLE)
            color=yellow
            ;;
        ERROR | WARN)
            color=red
            ;;
        INFO)
            color=blue
            ;;
        SUCCESS)
            color=green
            ;;
        *)
            text="$1"
    esac

    timestamp() {
        ink gray "["
        ink purple "$(date +%H:%M:%S)"
        ink gray "] "
    }

    timestamp; ink "$color" "$text"; echo
}

log_err() {
  logging ERROR "$1" 1>&2
}

log_info() {
  logging INFO "$1" 1>&2
}

log_suc() {
  logging SUCCESS "$1" 1>&2
}

cd $HOME

if [ -d "$HOME/dotfiles" ]; then
  log_suc "dotfiles is already exists."
  exit 0
fi

if is_exists "git"; then
  git clone https://github.com/ryoana14/dotfile.git
  
  if [ -d dotfile ]; then
    cd dotfile
    git submodule init
    git submodule update
    cd $HOME

    log_suc "Succeed to download dotfiles"
  else
    log_err "Failed to download dotfiles..."
    exit 1
  fi
elif is_exists "curl" || is_exists "wget"; then
  tar_file="https://github.com/ryoana14/dotfiles/archive/master.tar.gz"

  if is_exists "curl"; then
    curl -L "$tar_file"
  elif is_exists "wget"; then
    wget -O - "$tar_file"
  fi | tar xvz

  if [ ! -d dotfiles.master ]; then
    log_err "Failed to download dotfiles..."
    exit 1
  fi
  mv -f dotfiles.master dotfiles
  log_suc "Succeed to download dotfiles"
else
  log_err "curl or wget required"
  exit 1
fi

cd dotfiles

for f in .??*
do
  [ "$f" == ".git" ] && continue
  [ "$f" == ".vimrc_simple" ] && continue
  ln -snfv "$f" "$HOME"/"$f"
  if $?; then
    log_suc "Successfully created symlink of ${f}"
  else
    log_err "Failed to create symlink of ${f}"
  fi
done

