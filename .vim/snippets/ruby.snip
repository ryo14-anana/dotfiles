snippet ruby
        #!/usr/bin/env ruby
        # coding: utf-8

alias encutf magic

snippet class
        class ${1:name}
          ${2}
        end

snippet mod
        module ${1:name}
          ${2}
        end

snippet defi
        def initialize${1:(${2:args\})}
          ${3}
        end

snippet unless
        unless ${1:condition}
          ${2}
        end

snippet ife
        if ${1:condition}
          ${2}
        else
          ${3}
        end

snippet ifei
        if ${1:condition}
          ${2}
        elsif ${3:condition}
          ${4}
        end

snippet case
        case ${1:var}
          when ${2:expr}
            ${3}
        end

alias case sw

snippet inj
        inject(${1:initial}) do |${2:acc}, ${3:val}|
          ${4}
        end

snippet injp
        inject(${1:initial}, &:${2:method})

snippet eacho
        each_with_object(${1:memoobj}) do |${2:val}, ${3:memoobj}|
          ${4}
        end

snippet map
        map do |${1:var}|
          ${2}
        end

snippet mapp
        map(&:${1:method})

snippet sortby
        sort_by(&:${1:method})

alias sortby sort_by

snippet sortbydo
        sort_by do |${1:var}|
          ${2}
        end

snippet begin
        begin
          ${1:# TODO}
        rescue
          ${2:# TODO}
        end

snippet gsmi
        gets.split.map(&:to_i)

snippet gi
        gets.to_i
