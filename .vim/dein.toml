# -----------------------------------------------------
# plugin manager
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/neco-syntax'

# -----------------------------------------------------
# filetypes
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'
hook_add = '''
  let g:vim_json_syntax_conceal = 0
'''

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = 'markdown'
hook_add = '''
  let g:vim_markdown_folding_disabled = 1
  let g:vim_markdown_conceal = 0
  let g:vim_markdown_conceal_code_blocks = 0

'''

# -----------------------------------------------------
## appearance
# colorscheme
[[plugins]]
repo = 'nightsense/snow'
hook_add = '''
  set background=dark
  let g:lightline = { 'colorscheme': 'snow_dark' }
  if has('win64')
    set termguicolors
  endif

  colorscheme snow
'''

# visualization of indent
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_char = '|'
  let g:indentLine_color_term = 7
'''

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'

# -----------------------------------------------------
## viewr
# preview
[[plugins]]
repo = 'kannokanno/previm'
on_ft = 'markdown'
hook_add = '''
  augroup PrevimSettings
    autocmd!
    autocmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
  augroup END

  nnoremap <Space>md :PrevimOpen
'''

# browser
[[plugins]]
repo = 'tyru/open-browser.vim'

# filer
[[plugins]]
repo = 'cocopon/vaffle.vim'
hook_add = '''
  nnoremap <Space>fi :Vaffle<CR>
  let g:vaffle_auto_cd = 1
  let g:vaffle_show_hidden_files = 1
  " let g:vaffle_open_selected_vsplit_position = 'rightbelow'

  " function! s:customize_vaffle_mappings() abort 
  "   nmap <buffer> <CR> <Plug>(vaffle-open-selected-vsplit)
  " endfunction

  " augroup vimrc_vaffle
  "   autocmd!
  "   autocmd FileType vaffle call s:customize_vaffle_mappings()
  " augroup END
'''

# -----------------------------------------------------
## etc
# quick run program
[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  let g:quickrun_config = {'*': {'hook/time/enable': '1'},}
  nnoremap <Space>qr :QuickRun
'''

# doc
[[plugins]]
repo = 'vim-jp/vimdoc-ja'

# git
[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add = '''
  nnoremap <Space>gl :Glog<CR>
  nnoremap <Space>gd :Gdiff<CR>
'''

# -----------------------------------------------------
## Language Server
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
  nnoremap <silent> <C-]> :LspDefinition<CR>
  nnoremap <silent> <Space>lh :LspHover<CR>
  nnoremap <silent> <Space>lr :LspReferences<CR>
  nnoremap <silent> <Space>li :LspImplementation<CR>
  nnoremap <silent> <Space>ls :split \| :LspDefinition <CR>
  nnoremap <silent> <Space>lv :vsplit \| :LspDefinition <CR>
'''

[[plugins]]
repo = 'prabirshrestha/async.vim'

# -----------------------------------------------------
## file
[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
  if has ('mac')
    set rtp+=/usr/local/opt/fzf
  else
    set rtp+=$HOME/.fzf
  endif
  command! -bang -nargs=? -complete=dir Files
    \ call fzf#vim#files(<q-args>, fzf#vim#with_preview({'source': 'ag --hidden --ignore .git  -g ""'}), <bang>0)
  nnoremap <Space>zf :Files<CR>
  nnoremap <Space>zb :Buffer<CR>
  nnoremap <Space>zgs :GFiles?<CR>
  nnoremap <Space>zt :Tags<CR>
  let g:fzf_buffers_jump = 1
  let g:fzf_tags_command = 'ctags -R'
'''
